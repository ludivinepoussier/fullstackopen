{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Person.js","components/List.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","addPerson","newName","handleNameChange","newNum","handleNumChange","onSubmit","value","onChange","type","Filter","searchTerm","handleFilterChange","Person","data","removePerson","name","num","onClick","id","List","persons","filter","it","toLowerCase","indexOf","map","key","baseUrl","axios","get","then","response","newObject","post","delete","changedNum","put","Notification","message","success","classNameMsg","className","App","useState","setPersons","setSearchTerm","setNewName","setNewNum","notificationMsg","setNotificationMsg","notificationSuccess","setNotificationSuccess","useEffect","a","personService","initialPersons","fetchData","changeNum","oldEntry","find","newEntry","updatedPersons","setTimeout","serverPersons","event","preventDefault","personObject","some","window","confirm","returnedPerson","concat","person","target","ReactDOM","render","document","getElementById"],"mappings":"yPAwBeA,EAtBI,SAAC,GAAsE,IAApEC,EAAmE,EAAnEA,UAAWC,EAAwD,EAAxDA,QAASC,EAA+C,EAA/CA,iBAAkBC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,gBAChE,OACI,0BAAMC,SAAUL,GACZ,yCAEgB,2BACRM,MAAOL,EACPM,SAAUL,KAElB,2CAEgB,2BACRI,MAAOH,EACPI,SAAUH,KAElB,6BACI,4BAAQI,KAAK,UAAb,UCPDC,EATA,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,mBAC1B,OACI,2BACIL,MAAOI,EACPH,SAAUI,KCMPC,EAVA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACpB,OACI,sCACQD,EAAKE,KADb,aACsBF,EAAKG,KAD3B,OAGI,4BAAQC,QAAS,kBAAMH,EAAaD,EAAKK,MAAzC,YCKGC,EATF,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,QAASV,EAA8B,EAA9BA,WAAYI,EAAkB,EAAlBA,aAChC,OACIM,EAAQC,QAAO,SAAAC,GAAE,OAAIA,EAAGP,KAAKQ,cAAcC,QAAQd,EAAWa,gBAAkB,KACvEE,KAAI,SAAAH,GAAE,OACH,kBAAC,EAAD,CAAQI,IAAKJ,EAAGP,KAAMF,KAAMS,EAAIR,aAAcA,Q,gBCN5Da,EAAU,oCAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASlB,SAkB9B,EAfA,SAAAmB,GAEX,OADgBJ,IAAMK,KAAKN,EAASK,GACrBF,MAAK,SAAAC,GAAQ,OAAIA,EAASlB,SAa9B,EAVA,SAAAK,GAEX,OADgBU,IAAMM,OAAN,UAAgBP,EAAhB,YAA2BT,IAC5BY,MAAK,SAAAC,GAAQ,OAAIA,EAASlB,SAQ9B,EALA,SAACK,EAAIiB,GAEhB,OADgBP,IAAMQ,IAAN,UAAaT,EAAb,YAAwBT,GAAMiB,GAC/BL,MAAK,SAAAC,GAAQ,OAAIA,EAASlB,SCL9BwB,EAbM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC7B,GAAgB,OAAZD,EACA,OAAO,KAGX,IAAME,EAAeD,EAAU,aAAe,WAC9C,OACI,yBAAKE,UAAWD,GACXF,ICuIEI,EA1IH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACPvB,EADO,KACEwB,EADF,OAEsBD,mBAAS,IAF/B,mBAEPjC,EAFO,KAEKmC,EAFL,OAGgBF,mBAAS,IAHzB,mBAGP1C,EAHO,KAGE6C,EAHF,OAIcH,mBAAS,IAJvB,mBAIPxC,EAJO,KAIC4C,EAJD,OAKgCJ,mBAAS,MALzC,mBAKPK,EALO,KAKUC,EALV,OAMwCN,oBAAS,GANjD,mBAMPO,EANO,KAMcC,EANd,KAQdC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEAC6BC,IAD7B,OACMC,EADN,OAEAX,EAAWW,GAFX,4CADY,uBAAC,WAAD,wBAKZC,KACD,IAEH,IAAMC,EAAS,uCAAG,kCAAAJ,EAAA,6DACRK,EAAWtC,EAAQuC,MAAK,SAAArC,GAAE,OAAIA,EAAGP,OAASd,KAC1C2D,EAFQ,2BAEQF,GAFR,IAEkB1C,IAAKb,IAFvB,kBAIJmD,EAAqBI,EAASxC,GAAI0C,GAJ9B,OAKJC,EAAiBzC,EAAQK,KAAI,SAAAH,GAAE,OAAIA,IAAOoC,EAC1CE,EACAtC,KACNsB,EAAWiB,GACXZ,EAAmB,GAAD,OAAIhD,EAAJ,sBAClBkD,GAAuB,GACvBW,YAAW,WACPb,EAAmB,QACpB,KAbO,yDAgBVA,EAAmB,GAAD,OAAIhD,EAAJ,0CAClBkD,GAAuB,GACvBW,YAAW,WACPb,EAAmB,QACpB,KApBO,UAqBkBK,IArBlB,QAqBJS,EArBI,OAsBVnB,EAAWmB,GAtBD,0DAAH,qDA2BT/D,EAAS,uCAAG,WAAMgE,GAAN,iBAAAX,EAAA,yDACdW,EAAMC,iBAEAC,EAAe,CACjBnD,KAAMd,EACNe,IAAKb,IAGLiB,EAAQ+C,MAAK,SAAA7C,GAAE,OAAIA,EAAGP,KAAKQ,gBAAkBtB,EAAQsB,iBAR3C,gBASN6C,OAAOC,QAAP,UAAkBpE,EAAlB,4EACAwD,EAAUtD,GAEd2C,EAAW,IACXC,EAAU,IAbA,wCAemBO,EAAqBY,GAfxC,QAeJI,EAfI,OAgBV1B,EAAWxB,EAAQmD,OAAOD,IAC1BxB,EAAW,IACXC,EAAU,IACVE,EAAmB,GAAD,OAAIhD,EAAJ,oBAClBkD,GAAuB,GACvBW,YAAW,WACPb,EAAmB,QACpB,KAvBO,4CAAH,sDA2BTnC,EAAY,uCAAG,WAAOI,GAAP,iBAAAmC,EAAA,yDACXmB,EAASpD,EAAQuC,MAAK,SAAArC,GAAE,OAAIA,EAAGJ,KAAOA,MAExCkD,OAAOC,QAAP,iBAAyBG,EAAOzD,KAAhC,OAHa,0CAKHuC,EAAqBpC,GALlB,OAMT0B,EAAWxB,EAAQC,QAAO,SAAAC,GAAE,OAAIA,EAAGJ,KAAOA,MAC1C+B,EAAmB,GAAD,OAAIuB,EAAOzD,KAAX,sBAClBoC,GAAuB,GACvBW,YAAW,WACPb,EAAmB,QACpB,KAXM,yDAcTA,EAAmB,GAAD,OAAIuB,EAAOzD,KAAX,0CAClBoC,GAAuB,GACvBW,YAAW,WACPb,EAAmB,QACpB,KAlBM,UAmBmBK,IAnBnB,QAmBHS,EAnBG,OAoBTnB,EAAWmB,GApBF,0DAAH,sDAqClB,OACI,6BACI,yCACA,kBAAC,EAAD,CAAczB,QAASU,EAAiBT,QAASW,IACjD,kBAAC,EAAD,CACIxC,WAAYA,EACZC,mBAlBe,SAACqD,GACxBnB,EAAcmB,EAAMS,OAAOnE,UAoBvB,iDAEA,kBAAC,EAAD,CACIN,UAAWA,EACXC,QAASA,EACTC,iBAtBa,SAAC8D,GACtBlB,EAAWkB,EAAMS,OAAOnE,QAsBhBH,OAAQA,EACRC,gBApBY,SAAC4D,GACrBjB,EAAUiB,EAAMS,OAAOnE,UAsBnB,4CACA,4BACI,kBAAC,EAAD,CACIc,QAASA,EACTV,WAAYA,EACZI,aAAcA,OCrIlC4D,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.714002e1.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNum, handleNumChange}) => {\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                name:&nbsp;\n                            <input\n                    value={newName}\n                    onChange={handleNameChange} />\n            </div>\n            <div>\n                number:&nbsp;\n                            <input\n                    value={newNum}\n                    onChange={handleNumChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Filter = ({ searchTerm, handleFilterChange}) => {\n    return (\n        <input\n            value={searchTerm}\n            onChange={handleFilterChange}\n        />\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Person = ({ data, removePerson }) => {\n    return (\n        <li>\n            {`${data.name}: ${data.num}`}\n            &nbsp;\n            <button onClick={() => removePerson(data.id)}>delete</button>\n        </li>\n    )\n}\n\nexport default Person\n","import React from 'react'\nimport Person from './Person'\n\nconst List = ({persons, searchTerm, removePerson}) => {\n    return (\n        persons.filter(it => it.name.toLowerCase().indexOf(searchTerm.toLowerCase()) >= 0)\n                .map(it => (\n                    <Person key={it.name} data={it} removePerson={removePerson}/>\n                ))\n    )\n}\n\nexport default List\n","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst change = (id, changedNum) => {\n    const request = axios.put(`${baseUrl}/${id}`, changedNum)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, change }\n","import React from 'react'\n\nconst Notification = ({ message, success }) => {\n    if (message === null) {\n        return null\n    }\n\n    const classNameMsg = success ? \"msgSuccess\" : \"msgError\"\n    return (\n        <div className={classNameMsg} >\n            {message}\n        </div>\n    )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport List from './components/List'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [searchTerm, setSearchTerm] = useState('');\n    const [newName, setNewName] = useState('')\n    const [newNum, setNewNum] = useState('')\n    const [notificationMsg, setNotificationMsg] = useState(null)\n    const [notificationSuccess, setNotificationSuccess] = useState(true)\n\n    useEffect(() => {\n        async function fetchData() {\n        const initialPersons = await personService.getAll()\n        setPersons(initialPersons)\n        }\n        fetchData()\n    }, [])\n\n    const changeNum = async () => {\n        const oldEntry = persons.find(it => it.name === newName)\n        const newEntry = { ...oldEntry, num: newNum }\n        try {\n            await personService.change(oldEntry.id, newEntry)\n            const updatedPersons = persons.map(it => it === oldEntry\n                ? newEntry\n                : it)\n            setPersons(updatedPersons)\n            setNotificationMsg(`${newName} has been updated`)\n            setNotificationSuccess(true)\n            setTimeout(() => {\n                setNotificationMsg(null)\n            }, 5000)\n        }\n        catch {\n            setNotificationMsg(`${newName} has already been removed from server`)\n            setNotificationSuccess(false)\n            setTimeout(() => {\n                setNotificationMsg(null)\n            }, 5000)\n            const serverPersons = await personService.getAll()\n            setPersons(serverPersons)\n        }\n        \n    }\n\n    const addPerson = async event => {\n        event.preventDefault()\n\n        const personObject = {\n            name: newName,\n            num: newNum\n        }\n\n        if (persons.some(it => it.name.toLowerCase() === newName.toLowerCase())) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                changeNum(newNum)\n            }\n            setNewName('')\n            setNewNum('')\n        } else {\n            const returnedPerson = await personService.create(personObject)\n            setPersons(persons.concat(returnedPerson))\n            setNewName('')\n            setNewNum('') \n            setNotificationMsg(`${newName} has been added`)\n            setNotificationSuccess(true)\n            setTimeout(() => {\n                setNotificationMsg(null)\n            }, 5000)          \n        }\n    }\n\n    const removePerson = async (id) => {\n        const person = persons.find(it => it.id === id)\n\n        if (window.confirm(`Delete ${person.name} ?`)) {\n            try {\n                await personService.remove(id)\n                setPersons(persons.filter(it => it.id !== id))\n                setNotificationMsg(`${person.name} has been deleted`)\n                setNotificationSuccess(true)\n                setTimeout(() => {\n                    setNotificationMsg(null)\n                }, 5000)\n            }\n            catch {\n                setNotificationMsg(`${person.name} has already been removed from server`)\n                setNotificationSuccess(false)\n                setTimeout(() => {\n                    setNotificationMsg(null)\n                }, 5000)\n                const serverPersons = await personService.getAll()\n                setPersons(serverPersons)\n            }\n        }\n    }\n\n    const handleFilterChange = (event) => {\n        setSearchTerm(event.target.value);\n    };\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumChange = (event) => {\n        setNewNum(event.target.value)\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={notificationMsg} success={notificationSuccess}/>\n            <Filter \n                searchTerm={searchTerm}\n                handleFilterChange={handleFilterChange}\n            />\n\n            <h3>Add a new contact</h3>\n\n            <PersonForm \n                addPerson={addPerson} \n                newName={newName}\n                handleNameChange={handleNameChange}\n                newNum={newNum}\n                handleNumChange={handleNumChange}\n            />\n            \n            <h2>Contact List</h2>\n            <ul>\n                <List \n                    persons={persons}\n                    searchTerm={searchTerm}\n                    removePerson={removePerson}\n                />\n            </ul>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}